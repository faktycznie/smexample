// Rem output with px fallback
@mixin font-size($sizeValue: 14) {
	//sizeValue = font size in px
	font-size: $sizeValue * 1px; //pixels
	font-size: ($sizeValue/10) * 1rem; //rems
}

@mixin line-height($sizeValue: 18, $font: false) {
	//sizeValue = line-height in px
	//font = font size in px
	@if $font {
		line-height: ($sizeValue/$font); //percentage
	} @else {
		line-height: ($sizeValue) * 1px; //pixels
		line-height: ($sizeValue/10) * 1rem; //rems
	}
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
	width: map-get( $columns, $numberColumns ) - ( ( $columns__margin * ( $numberColumns - 1 ) ) / $numberColumns );
}

//placeholder
@mixin optional-at-root($sel) {
	@at-root #{if(not &, $sel, selector-append(&, $sel))} {
		@content;
	}
}

@mixin placeholder {
	@include optional-at-root('::-webkit-input-placeholder') {
		@content;
	}

	@include optional-at-root(':-moz-placeholder') {
		@content;
	}

	@include optional-at-root('::-moz-placeholder') {
		@content;
	}

	@include optional-at-root(':-ms-input-placeholder') {
		@content;
	}
}

@mixin file-icon($type: 'pdf',$width: 25, $height: 26) {
	&:before {
		content: '';
		display: inline-block;
		vertical-align: middle;
		width: $width * 1px;
		height: $height * 1px;
		background: url("../img/file-#{$type}.svg");
		background-size: contain;
		background-repeat: no-repeat;
	}
}